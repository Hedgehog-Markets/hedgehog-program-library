/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import type { ClusterFilter, Context, Program, PublicKey } from "@metaplex-foundation/umi";

import { getHhAmmErrorFromCode, getHhAmmErrorFromName } from "../errors";

export const HH_AMM_PROGRAM_ID =
  "Hr4whNgXr3yZsJvx3TVSwfsFgXuSEPB1xKmvgrtLhsrM" as PublicKey<"Hr4whNgXr3yZsJvx3TVSwfsFgXuSEPB1xKmvgrtLhsrM">;

export function createHhAmmProgram(): Program {
  return {
    name: "hhAmm",
    publicKey: HH_AMM_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getHhAmmErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getHhAmmErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getHhAmmProgram<T extends Program = Program>(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): T {
  return context.programs.get<T>("hhAmm", clusterFilter);
}

export function getHhAmmProgramId(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): PublicKey {
  return context.programs.getPublicKey("hhAmm", HH_AMM_PROGRAM_ID, clusterFilter);
}
