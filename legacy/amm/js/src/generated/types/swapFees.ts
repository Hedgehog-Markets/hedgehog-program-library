/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import type { Bps, BpsArgs } from ".";
import type { Serializer } from "@metaplex-foundation/umi/serializers";

import { struct } from "@metaplex-foundation/umi/serializers";

import { getBpsSerializer } from ".";

export type SwapFees = {
  swapFee: Bps;
  lpAddFee: Bps;
  lpBurnFee: Bps;
  ownerSwapFee: Bps;
  ownerLpAddFee: Bps;
  ownerLpBurnFee: Bps;
};

export type SwapFeesArgs = {
  swapFee: BpsArgs;
  lpAddFee: BpsArgs;
  lpBurnFee: BpsArgs;
  ownerSwapFee: BpsArgs;
  ownerLpAddFee: BpsArgs;
  ownerLpBurnFee: BpsArgs;
};

export function getSwapFeesSerializer(): Serializer<SwapFeesArgs, SwapFees> {
  return struct<SwapFees>(
    [
      ["swapFee", getBpsSerializer()],
      ["lpAddFee", getBpsSerializer()],
      ["lpBurnFee", getBpsSerializer()],
      ["ownerSwapFee", getBpsSerializer()],
      ["ownerLpAddFee", getBpsSerializer()],
      ["ownerLpBurnFee", getBpsSerializer()],
    ],
    { description: "SwapFees" },
  ) as Serializer<SwapFeesArgs, SwapFees>;
}
