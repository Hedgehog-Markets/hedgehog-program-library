/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import type { ClusterFilter, Context, Program, PublicKey } from "@metaplex-foundation/umi";

import { getHplParlayErrorFromCode, getHplParlayErrorFromName } from "../errors";

export const HPL_PARLAY_PROGRAM_ID =
  "PLYaNRbQs9GWyVQdcLrzPvvZu7NH4W2sneyHcEimLr7" as PublicKey<"PLYaNRbQs9GWyVQdcLrzPvvZu7NH4W2sneyHcEimLr7">;

export function createHplParlayProgram(): Program {
  return {
    name: "hplParlay",
    publicKey: HPL_PARLAY_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getHplParlayErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getHplParlayErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getHplParlayProgram<T extends Program = Program>(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): T {
  return context.programs.get<T>("hplParlay", clusterFilter);
}

export function getHplParlayProgramId(
  context: Pick<Context, "programs">,
  clusterFilter?: ClusterFilter,
): PublicKey {
  return context.programs.getPublicKey("hplParlay", HPL_PARLAY_PROGRAM_ID, clusterFilter);
}
